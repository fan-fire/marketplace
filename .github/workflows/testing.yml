name: Test Suite

on:
  pull_request:
    branches:
      - main
      - staging
      - develop

jobs:
  tests-with-cache-on-ubuntu-latest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Run Truffle Tests
        id: solcsh
        run: bash .github/scripts/solc-tests.sh
      - name: Read test_output.log
        id: test_output
        uses: juliangruber/read-file-action@v1
        with:
          path: ./test_output.log
      - name: Read sizes_output.log
        id: sizes_output
        uses: juliangruber/read-file-action@v1
        with:
          path: ./sizes_output.log
      - name: Read solhint_output.log
        id: solhint_output
        uses: juliangruber/read-file-action@v1
        with:
          path: ./solhint_output.log
      - name: Read coverage_output.log
        id: coverage_output
        uses: juliangruber/read-file-action@v1
        with:
          path: ./coverage_output.log
      - uses: actions/github-script@0.9.0
        env:
          OUTPUT_TESTS: ${{ steps.test_output.outputs.content }}
          OUTPUT_SIZES: ${{ steps.sizes_output.outputs.content }}
          OUTPUT_SOLHINT: ${{ steps.solhint_output.outputs.content }}
          OUTPUT_COVERAGE: ${{ steps.coverage_output.outputs.content }}
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { OUTPUT_TESTS, OUTPUT_SIZES, OUTPUT_SOLHINT, OUTPUT_COVERAGE} = process.env;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: OUTPUT_TESTS
            })

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: OUTPUT_SIZES
            })

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: OUTPUT_SOLHINT
            })

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: OUTPUT_COVERAGE
            })